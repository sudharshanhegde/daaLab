import java.util.Scanner;

public class QuickSort {

    // Partition function for QuickSort
    public static int partition(int[] arr, int low, int high) {
        int pivot = arr[high];  // Choose the last element as pivot
        int i = (low - 1);  // Index of smaller element

        for (int j = low; j < high; j++) {
            if (arr[j] < pivot) {
                i++;
                // Swap arr[i] and arr[j]
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        // Swap arr[i + 1] with arr[high] (or pivot)
        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;

        return i + 1;  // Return the pivot index
    }

    // QuickSort function
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int pi = partition(arr, low, high);

            // Recursively sort elements before and after partition
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // User input for the number of elements to sort
        System.out.print("Enter the number of elements to sort (n): ");
        int n = scanner.nextInt();

        // Initialize array and take user input for elements
        int[] arr = new int[n];
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();  // User-defined input for each element
        }

        // Measure time for sorting the user-defined input
        long startTime = System.nanoTime();  // Start time
        quickSort(arr, 0, arr.length - 1);
        long endTime = System.nanoTime();  // End time
        long timeTaken = (endTime - startTime) / 1000000;  // Time in milliseconds
        System.out.println("sorted array is:");
        for(int i:arr){
         System.out.println(i+" ");
         }
        // Output the results
        System.out.println("Time taken to sort the array: " + timeTaken + " ms");

        scanner.close();
    }
}
